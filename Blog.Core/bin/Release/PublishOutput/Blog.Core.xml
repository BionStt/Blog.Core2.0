<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Blog.Core</name>
    </assembly>
    <members>
        <member name="T:Blog.Core.AOP.BlogCacheAOP">
            <summary>
            面向切面的缓存使用
            </summary>
        </member>
        <member name="T:Blog.Core.AOP.BlogLogAOP">
            <summary>
            拦截器BlogLogAOP 继承IInterceptor接口
            </summary>
        </member>
        <member name="M:Blog.Core.AOP.BlogLogAOP.Intercept(Castle.DynamicProxy.IInvocation)">
            <summary>
            实例化IInterceptor唯一方法 
            </summary>
            <param name="invocation">包含被拦截方法的信息</param>
        </member>
        <member name="T:Blog.Core.AOP.ICaching">
            <summary>
            简单的缓存接口，只有查询和添加，以后会进行扩展
            </summary>
        </member>
        <member name="T:Blog.Core.AOP.MemoryCaching">
            <summary>
            实例化缓存接口ICaching
            </summary>
        </member>
        <member name="M:Blog.Core.AuthHelper.RayPIMemoryCache.Exists(System.String)">
            <summary>
            验证缓存项是否存在
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.AuthHelper.RayPIMemoryCache.Get(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.AuthHelper.RayPIMemoryCache.AddMemoryCache(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.AuthHelper.BlogCoreToken.IssueJWT(Blog.Core.AuthHelper.TokenModel,System.TimeSpan,System.TimeSpan)">
            <summary>
            获取JWT字符串并存入缓存
            </summary>
            <param name="tm"></param>
            <param name="expireSliding"></param>
            <param name="expireAbsoulte"></param>
            <returns></returns>
        </member>
        <member name="T:Blog.Core.AuthHelper.TokenAuth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Blog.Core.AuthHelper.TokenAuth._next">
            <summary>
            
            </summary>
        </member>
        <member name="M:Blog.Core.AuthHelper.TokenAuth.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Blog.Core.AuthHelper.TokenAuth.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:Blog.Core.AuthHelper.TokenModel">
            <summary>
            令牌类
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.TokenModel.Uid">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.TokenModel.Uname">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.TokenModel.Phone">
            <summary>
            手机
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.TokenModel.Icon">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.TokenModel.UNickname">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.TokenModel.Sub">
            <summary>
            签名
            </summary>
        </member>
        <member name="M:Blog.Core.AutoMapper.CustomProfile.#ctor">
            <summary>
            配置构造函数，用来创建关系映射
            </summary>
        </member>
        <member name="T:Blog.Core.Controllers.BlogController">
            <summary>
            Blog控制器所有接口
            </summary>
        </member>
        <member name="M:Blog.Core.Controllers.BlogController.#ctor(Blog.Core.IServices.IAdvertisementServices,Blog.Core.IServices.IBlogArticleServices,Blog.Core.Common.IRedisCacheManager)">
            <summary>
            构造函数
            </summary>
            <param name="advertisementServices"></param>
            <param name="blogArticleServices"></param>
            <param name="redisCacheManager"></param>
        </member>
        <member name="M:Blog.Core.Controllers.BlogController.GetBlogs">
            <summary>
            获取博客列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.BlogController.Get(System.Int32)">
            <summary>
            获取详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Blog.Core.Controllers.LoginController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Blog.Core.Controllers.LoginController.GetJWTStr(System.Int64,System.String,System.Int32,System.Int32)">
            <summary>
            获取JWT，并存入缓存
            </summary>
            <param name="id">用户Id</param>
            <param name="sub">身份</param>
            <param name="expiresSliding">相对过期时间，单位为分</param>
            <param name="expiresAbsoulute">绝对过期时间，单位为天</param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.LoginController.Getjsonp(System.String,System.Int64,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="sub"></param>
            <param name="expiresSliding"></param>
            <param name="expiresAbsoulute"></param>
            <returns></returns>
        </member>
        <member name="T:Blog.Core.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:Blog.Core.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Blog.Core.Program.BuildWebHost(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Blog.Core.Startup">
            <summary>
            启动文件
            </summary>
        </member>
        <member name="M:Blog.Core.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            构造函数
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Blog.Core.Startup.Configuration">
            <summary>
            Configuration 属性
            </summary>
        </member>
        <member name="M:Blog.Core.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            ConfigureServices 方法
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Blog.Core.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            方法
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
